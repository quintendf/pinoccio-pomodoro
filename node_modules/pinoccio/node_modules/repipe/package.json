{
  "name": "repipe",
  "description": "reconnect/remake streams that are piped to a single output stream",
  "version": "0.0.2",
  "repository": {
    "url": "git://github.com/soldair/node-repipe.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js"
  },
  "author": {
    "name": "Ryan Day"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "~2.3.2",
    "through": "~2.3.4"
  },
  "readme": "node-repipe\n===========\n\nreconnect/remake streams that are piped to a single output stream\n\nAny time you would like to make a best effort to retrieve a whole stream over a connection that may be interupted this is invaluable.\n\nThis is how i use it so i can restart my db server any time. \n\n\n```js\n\nvar repipe = require('repipe');\n// make database connection and ensure it reconnects automatically\nvar multilevel ...\n\nvar s = through();\nrepipe(s,function(err,last,done){\n  if(err && err.message != \"unexpected disconnection\") return done(err);\n  // its the first stream or the stream was cut off before it emitted the end event\n  // start the new read stream from where it left off..\n  var key;\n  if(last) key = last.key+\"\\x00\";\n  done(false,multilevel.createReadStream({start:key});\n});\n\ns.on('data',function(data){\n  console.log(data);\n});\n\ns.on('end',function(){\n  //yay!\n})\n\n\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/soldair/node-repipe/issues"
  },
  "homepage": "https://github.com/soldair/node-repipe",
  "_id": "repipe@0.0.2",
  "_from": "repipe@~0.0.2"
}
